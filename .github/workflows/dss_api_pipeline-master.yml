name: CI

on: [push, pull_request]

env:
  DSS_PROJECT: DKU_CHURN
  DESIGN_URL: https://dss-b51b6a96-f56c1b41-dku.us-east-1.app.dataiku.io
  DESIGN_API_KEY: ${{ secrets.DESIGN_API_KEY }}
  API_SERVICE_ID: api-service-churn
  API_ENDPOINT_ID: churn-model
  API_INFRA_ID: api_space-f56c1b41-dku_node-b51b6a96
  # AUTO_PREPROD_API_KEY: ${{ secrets.AUTO_PREPROD_API_KEY }}

jobs:
  PREPARE:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.12.2
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Set API package ID
      id: apipackage
      run: |
        echo "::set-output name=api_package_id::${API_SERVICE_ID}_v$(date +%Y-%m-%d_%H-%M-%S)"
    - name: Print environment
      run: printenv

  VALIDATE:
    needs: PREPARE
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.12.2
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.2
    - name: Run pytest
      run: |
        python -m pytest 1_project_validation/run_test.py -o junit_family=xunit1 --host='${{ env.DESIGN_URL }}' --api='${{ env.DESIGN_API_KEY }}' --project='${{ env.DSS_PROJECT }}' --junitxml=reports/PROJECT_VALIDATION.xml

  PACK_AND_PUB:
    needs: [VALIDATE, PREPARE]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.12.2
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.2
    - name: Package and Publish
      run: |
        python 1_package_and_publish/run_packaging.py "${DESIGN_URL}" "${DESIGN_API_KEY}" "${DSS_PROJECT}" "${API_SERVICE_ID}" "${{ needs.PREPARE.outputs.api_package_id }}" "${API_INFRA_ID}"
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: apipackage
    #     path: '${{ needs.PREPARE.outputs.api_package_id }}.zip'

  DEV_TEST:
    needs: PACK_AND_PUB
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.12.2
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.2
    # - name: Download artifact
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: apipackage
    # - name: Upload in preprod
    #   run: |
    #     python 3_preprod_test/import_bundle.py '${{ env.DESIGN_URL }}' '${{ env.DESIGN_API_KEY }}' '${{ env.DSS_PROJECT }}' '${env.API_SERVICE_ID}' '${{ needs.PREPARE.outputs.apipackage }}' '${env.INFRA_ID}'
    - name: Dev Tests
      run: |
        python 2_deploy_dev/run_deploy_dev.py "${DESIGN_URL}" "${DESIGN_API_KEY}" "${DSS_PROJECT}" "${API_SERVICE_ID}" "${{ needs.PREPARE.outputs.api_package_id }}" "${API_INFRA_ID}"
        pytest -s 2_deploy_dev/test_dev.py -o junit_family=xunit1 --host='${DESIGN_URL}' --api='$DESIGN_API_KEY' --api_service_id='${API_SERVICE_ID}' --api_endpoint_id='${API_ENDPOINT_ID}' --api_dev_infra_id='${API_INFRA_ID}' --junitxml=reports/DEV_TEST.xml

  # DEPLOY_TO_PROD:
  #   needs: DEV_TEST
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Set up Python 3.12.2
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: 3.12.2
  #   - name: Download artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: apipackage
  #   - name: Upload in Prod
  #     run: |
  #       python 3_deploy_prod/run_deploy_prod.py '${{ env.DESIGN_URL }}' '${{ env.DESIGN_API_KEY }}' '${{ env.DSS_PROJECT }}' '${{ env.API_SERVICE_ID }}' '${{ needs.PREPARE.outputs.api_package_id }}' '${{ env.API_INFRA_ID }}'

  POST:
    needs: DEV_TEST
    # needs: DEPLOY_TO_PROD
    runs-on: ubuntu-latest
    steps:
    - name: Test results
      uses: actions/upload-artifact@v2
      with:
        name: Test results
        path: reports/**/*.xml        